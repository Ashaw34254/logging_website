{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  withCredentials: true,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add auth token if available\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  const {\n    response\n  } = error;\n\n  // Handle different error status codes\n  if ((response === null || response === void 0 ? void 0 : response.status) === 401) {\n    // Unauthorized - clear token and redirect to login\n    localStorage.removeItem('auth_token');\n    window.location.href = '/login';\n    toast.error('Your session has expired. Please log in again.');\n  } else if ((response === null || response === void 0 ? void 0 : response.status) === 403) {\n    toast.error('You do not have permission to perform this action.');\n  } else if ((response === null || response === void 0 ? void 0 : response.status) === 404) {\n    toast.error('The requested resource was not found.');\n  } else if ((response === null || response === void 0 ? void 0 : response.status) === 429) {\n    toast.error('Too many requests. Please try again later.');\n  } else if ((response === null || response === void 0 ? void 0 : response.status) >= 500) {\n    toast.error('Server error occurred. Please try again later.');\n  } else if (error.code === 'ECONNABORTED') {\n    toast.error('Request timed out. Please try again.');\n  } else if (!response) {\n    toast.error('Network error. Please check your connection.');\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  // Check authentication status\n  checkAuth: () => api.get('/auth/check'),\n  // Get current user\n  getCurrentUser: () => api.get('/auth/user'),\n  // Logout\n  logout: () => api.post('/auth/logout'),\n  // Get all users (admin only)\n  getAllUsers: (page = 1, limit = 20) => api.get(`/auth/users?page=${page}&limit=${limit}`),\n  // Update user role (admin only)\n  updateUserRole: (userId, role) => api.patch(`/auth/users/${userId}/role`, {\n    role\n  }),\n  // Delete user (owner only)\n  deleteUser: userId => api.delete(`/auth/users/${userId}`)\n};\n\n// Reports API\nexport const reportsAPI = {\n  // Get all reports with filtering\n  getAllReports: (filters = {}, page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString(),\n      ...Object.fromEntries(Object.entries(filters).filter(([_, v]) => v != null && v !== ''))\n    });\n    return api.get(`/reports?${params}`);\n  },\n  // Get specific report\n  getReport: id => api.get(`/reports/${id}`),\n  // Get user's own reports\n  getUserReports: (page = 1, limit = 20) => api.get(`/reports/user/mine?page=${page}&limit=${limit}`),\n  // Create new report\n  createReport: (reportData, files = []) => {\n    const formData = new FormData();\n\n    // Add report data\n    Object.keys(reportData).forEach(key => {\n      if (reportData[key] != null) {\n        formData.append(key, reportData[key]);\n      }\n    });\n\n    // Add files\n    files.forEach(file => {\n      formData.append('attachments', file);\n    });\n    return api.post('/reports', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Submit report (public endpoint)\n  submitReport: (reportData, files = []) => {\n    const formData = new FormData();\n    Object.keys(reportData).forEach(key => {\n      if (reportData[key] != null) {\n        formData.append(key, reportData[key]);\n      }\n    });\n    files.forEach(file => {\n      formData.append('attachments', file);\n    });\n    return api.post('/reports/submit', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Update report status\n  updateReportStatus: (id, status, notes = '') => api.patch(`/reports/${id}/status`, {\n    status,\n    notes\n  }),\n  // Assign report\n  assignReport: (id, handledBy) => api.patch(`/reports/${id}/assign`, {\n    handled_by: handledBy\n  }),\n  // Add attachment\n  addAttachment: (id, file) => {\n    const formData = new FormData();\n    formData.append('attachment', file);\n    return api.post(`/reports/${id}/attachments`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Download attachment\n  downloadAttachment: (reportId, attachmentId) => api.get(`/reports/${reportId}/attachments/${attachmentId}`, {\n    responseType: 'blob'\n  }),\n  // Reopen report\n  reopenReport: (id, reason) => api.post(`/reports/${id}/reopen`, {\n    reason\n  }),\n  // Delete report (admin only)\n  deleteReport: id => api.delete(`/reports/${id}`)\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  // Get dashboard analytics\n  getDashboardAnalytics: () => api.get('/analytics/dashboard'),\n  // Get report statistics\n  getReportStats: (dateFrom, dateTo) => {\n    const params = new URLSearchParams();\n    if (dateFrom) params.append('date_from', dateFrom);\n    if (dateTo) params.append('date_to', dateTo);\n    return api.get(`/analytics/reports?${params}`);\n  },\n  // Get staff performance\n  getStaffPerformance: (dateFrom, dateTo) => {\n    const params = new URLSearchParams();\n    if (dateFrom) params.append('date_from', dateFrom);\n    if (dateTo) params.append('date_to', dateTo);\n    return api.get(`/analytics/staff?${params}`);\n  },\n  // Get trend data\n  getTrendData: (dateFrom, dateTo) => {\n    const params = new URLSearchParams();\n    if (dateFrom) params.append('date_from', dateFrom);\n    if (dateTo) params.append('date_to', dateTo);\n    return api.get(`/analytics/trends?${params}`);\n  },\n  // Get analytics by period\n  getAnalyticsByPeriod: (period = 'month') => api.get(`/analytics/period?period=${period}`),\n  // Get public statistics\n  getPublicStats: () => api.get('/analytics/public'),\n  // Export reports\n  exportReports: (format = 'csv', filters = {}) => {\n    const params = new URLSearchParams({\n      format,\n      ...Object.fromEntries(Object.entries(filters).filter(([_, v]) => v != null && v !== ''))\n    });\n    return api.get(`/analytics/export/reports?${params}`, {\n      responseType: 'blob'\n    });\n  },\n  // Generate automated report\n  generateAutomatedReport: period => api.get(`/analytics/export/automated/${period}`)\n};\n\n// Utility functions\nexport const apiUtils = {\n  // Handle file download\n  downloadFile: (blob, filename) => {\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  },\n  // Format error message\n  getErrorMessage: error => {\n    var _error$response, _error$response$data, _error$response2, _error$response2$data;\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n      return error.response.data.message;\n    }\n    if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error) {\n      return error.response.data.error;\n    }\n    if (error.message) {\n      return error.message;\n    }\n    return 'An unexpected error occurred';\n  },\n  // Check if user has permission\n  hasPermission: (userRole, requiredRole) => {\n    const roleHierarchy = {\n      'support': 1,\n      'moderator': 2,\n      'admin': 3,\n      'owner': 4\n    };\n    return roleHierarchy[userRole] >= roleHierarchy[requiredRole];\n  },\n  // Format file size\n  formatFileSize: bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  },\n  // Format date\n  formatDate: date => {\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(new Date(date));\n  },\n  // Get relative time\n  getRelativeTime: date => {\n    const now = new Date();\n    const diff = now - new Date(date);\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    const days = Math.floor(diff / 86400000);\n    if (minutes < 60) {\n      return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n    } else if (hours < 24) {\n      return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\n    } else {\n      return `${days} day${days !== 1 ? 's' : ''} ago`;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","code","authAPI","checkAuth","get","getCurrentUser","logout","post","getAllUsers","page","limit","updateUserRole","userId","role","patch","deleteUser","delete","reportsAPI","getAllReports","filters","params","URLSearchParams","toString","Object","fromEntries","entries","filter","_","v","getReport","id","getUserReports","createReport","reportData","files","formData","FormData","keys","forEach","key","append","file","submitReport","updateReportStatus","notes","assignReport","handledBy","handled_by","addAttachment","downloadAttachment","reportId","attachmentId","responseType","reopenReport","reason","deleteReport","analyticsAPI","getDashboardAnalytics","getReportStats","dateFrom","dateTo","getStaffPerformance","getTrendData","getAnalyticsByPeriod","period","getPublicStats","exportReports","format","generateAutomatedReport","apiUtils","downloadFile","blob","filename","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","getErrorMessage","_error$response","_error$response$data","_error$response2","_error$response2$data","data","message","hasPermission","userRole","requiredRole","roleHierarchy","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","date","Intl","DateTimeFormat","year","month","day","hour","minute","Date","getRelativeTime","now","diff","minutes","hours","days"],"sources":["C:/Users/anton/OneDrive/Desktop/ahrpo scripts/logging_website/server-report-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\r\n  withCredentials: true,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('auth_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { response } = error;\r\n    \r\n    // Handle different error status codes\r\n    if (response?.status === 401) {\r\n      // Unauthorized - clear token and redirect to login\r\n      localStorage.removeItem('auth_token');\r\n      window.location.href = '/login';\r\n      toast.error('Your session has expired. Please log in again.');\r\n    } else if (response?.status === 403) {\r\n      toast.error('You do not have permission to perform this action.');\r\n    } else if (response?.status === 404) {\r\n      toast.error('The requested resource was not found.');\r\n    } else if (response?.status === 429) {\r\n      toast.error('Too many requests. Please try again later.');\r\n    } else if (response?.status >= 500) {\r\n      toast.error('Server error occurred. Please try again later.');\r\n    } else if (error.code === 'ECONNABORTED') {\r\n      toast.error('Request timed out. Please try again.');\r\n    } else if (!response) {\r\n      toast.error('Network error. Please check your connection.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  // Check authentication status\r\n  checkAuth: () => api.get('/auth/check'),\r\n  \r\n  // Get current user\r\n  getCurrentUser: () => api.get('/auth/user'),\r\n  \r\n  // Logout\r\n  logout: () => api.post('/auth/logout'),\r\n  \r\n  // Get all users (admin only)\r\n  getAllUsers: (page = 1, limit = 20) => \r\n    api.get(`/auth/users?page=${page}&limit=${limit}`),\r\n  \r\n  // Update user role (admin only)\r\n  updateUserRole: (userId, role) => \r\n    api.patch(`/auth/users/${userId}/role`, { role }),\r\n  \r\n  // Delete user (owner only)\r\n  deleteUser: (userId) => api.delete(`/auth/users/${userId}`),\r\n};\r\n\r\n// Reports API\r\nexport const reportsAPI = {\r\n  // Get all reports with filtering\r\n  getAllReports: (filters = {}, page = 1, limit = 20) => {\r\n    const params = new URLSearchParams({\r\n      page: page.toString(),\r\n      limit: limit.toString(),\r\n      ...Object.fromEntries(\r\n        Object.entries(filters).filter(([_, v]) => v != null && v !== '')\r\n      )\r\n    });\r\n    return api.get(`/reports?${params}`);\r\n  },\r\n  \r\n  // Get specific report\r\n  getReport: (id) => api.get(`/reports/${id}`),\r\n  \r\n  // Get user's own reports\r\n  getUserReports: (page = 1, limit = 20) => \r\n    api.get(`/reports/user/mine?page=${page}&limit=${limit}`),\r\n  \r\n  // Create new report\r\n  createReport: (reportData, files = []) => {\r\n    const formData = new FormData();\r\n    \r\n    // Add report data\r\n    Object.keys(reportData).forEach(key => {\r\n      if (reportData[key] != null) {\r\n        formData.append(key, reportData[key]);\r\n      }\r\n    });\r\n    \r\n    // Add files\r\n    files.forEach(file => {\r\n      formData.append('attachments', file);\r\n    });\r\n    \r\n    return api.post('/reports', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    });\r\n  },\r\n  \r\n  // Submit report (public endpoint)\r\n  submitReport: (reportData, files = []) => {\r\n    const formData = new FormData();\r\n    \r\n    Object.keys(reportData).forEach(key => {\r\n      if (reportData[key] != null) {\r\n        formData.append(key, reportData[key]);\r\n      }\r\n    });\r\n    \r\n    files.forEach(file => {\r\n      formData.append('attachments', file);\r\n    });\r\n    \r\n    return api.post('/reports/submit', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    });\r\n  },\r\n  \r\n  // Update report status\r\n  updateReportStatus: (id, status, notes = '') => \r\n    api.patch(`/reports/${id}/status`, { status, notes }),\r\n  \r\n  // Assign report\r\n  assignReport: (id, handledBy) => \r\n    api.patch(`/reports/${id}/assign`, { handled_by: handledBy }),\r\n  \r\n  // Add attachment\r\n  addAttachment: (id, file) => {\r\n    const formData = new FormData();\r\n    formData.append('attachment', file);\r\n    return api.post(`/reports/${id}/attachments`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    });\r\n  },\r\n  \r\n  // Download attachment\r\n  downloadAttachment: (reportId, attachmentId) => \r\n    api.get(`/reports/${reportId}/attachments/${attachmentId}`, {\r\n      responseType: 'blob',\r\n    }),\r\n  \r\n  // Reopen report\r\n  reopenReport: (id, reason) => \r\n    api.post(`/reports/${id}/reopen`, { reason }),\r\n  \r\n  // Delete report (admin only)\r\n  deleteReport: (id) => api.delete(`/reports/${id}`),\r\n};\r\n\r\n// Analytics API\r\nexport const analyticsAPI = {\r\n  // Get dashboard analytics\r\n  getDashboardAnalytics: () => api.get('/analytics/dashboard'),\r\n  \r\n  // Get report statistics\r\n  getReportStats: (dateFrom, dateTo) => {\r\n    const params = new URLSearchParams();\r\n    if (dateFrom) params.append('date_from', dateFrom);\r\n    if (dateTo) params.append('date_to', dateTo);\r\n    return api.get(`/analytics/reports?${params}`);\r\n  },\r\n  \r\n  // Get staff performance\r\n  getStaffPerformance: (dateFrom, dateTo) => {\r\n    const params = new URLSearchParams();\r\n    if (dateFrom) params.append('date_from', dateFrom);\r\n    if (dateTo) params.append('date_to', dateTo);\r\n    return api.get(`/analytics/staff?${params}`);\r\n  },\r\n  \r\n  // Get trend data\r\n  getTrendData: (dateFrom, dateTo) => {\r\n    const params = new URLSearchParams();\r\n    if (dateFrom) params.append('date_from', dateFrom);\r\n    if (dateTo) params.append('date_to', dateTo);\r\n    return api.get(`/analytics/trends?${params}`);\r\n  },\r\n  \r\n  // Get analytics by period\r\n  getAnalyticsByPeriod: (period = 'month') => \r\n    api.get(`/analytics/period?period=${period}`),\r\n  \r\n  // Get public statistics\r\n  getPublicStats: () => api.get('/analytics/public'),\r\n  \r\n  // Export reports\r\n  exportReports: (format = 'csv', filters = {}) => {\r\n    const params = new URLSearchParams({\r\n      format,\r\n      ...Object.fromEntries(\r\n        Object.entries(filters).filter(([_, v]) => v != null && v !== '')\r\n      )\r\n    });\r\n    return api.get(`/analytics/export/reports?${params}`, {\r\n      responseType: 'blob',\r\n    });\r\n  },\r\n  \r\n  // Generate automated report\r\n  generateAutomatedReport: (period) => \r\n    api.get(`/analytics/export/automated/${period}`),\r\n};\r\n\r\n// Utility functions\r\nexport const apiUtils = {\r\n  // Handle file download\r\n  downloadFile: (blob, filename) => {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n  },\r\n  \r\n  // Format error message\r\n  getErrorMessage: (error) => {\r\n    if (error.response?.data?.message) {\r\n      return error.response.data.message;\r\n    }\r\n    if (error.response?.data?.error) {\r\n      return error.response.data.error;\r\n    }\r\n    if (error.message) {\r\n      return error.message;\r\n    }\r\n    return 'An unexpected error occurred';\r\n  },\r\n  \r\n  // Check if user has permission\r\n  hasPermission: (userRole, requiredRole) => {\r\n    const roleHierarchy = {\r\n      'support': 1,\r\n      'moderator': 2,\r\n      'admin': 3,\r\n      'owner': 4\r\n    };\r\n    return roleHierarchy[userRole] >= roleHierarchy[requiredRole];\r\n  },\r\n  \r\n  // Format file size\r\n  formatFileSize: (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  },\r\n  \r\n  // Format date\r\n  formatDate: (date) => {\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(new Date(date));\r\n  },\r\n  \r\n  // Get relative time\r\n  getRelativeTime: (date) => {\r\n    const now = new Date();\r\n    const diff = now - new Date(date);\r\n    const minutes = Math.floor(diff / 60000);\r\n    const hours = Math.floor(diff / 3600000);\r\n    const days = Math.floor(diff / 86400000);\r\n    \r\n    if (minutes < 60) {\r\n      return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\r\n    } else if (hours < 24) {\r\n      return `${hours} hour${hours !== 1 ? 's' : ''} ago`;\r\n    } else {\r\n      return `${days} day${days !== 1 ? 's' : ''} ago`;\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;;AAEnC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACS,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,GAAG,CAACS,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,MAAM;IAAEG;EAAS,CAAC,GAAGH,KAAK;;EAE1B;EACA,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IAC5B;IACAP,YAAY,CAACQ,UAAU,CAAC,YAAY,CAAC;IACrCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B1B,KAAK,CAACkB,KAAK,CAAC,gDAAgD,CAAC;EAC/D,CAAC,MAAM,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IACnCtB,KAAK,CAACkB,KAAK,CAAC,oDAAoD,CAAC;EACnE,CAAC,MAAM,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IACnCtB,KAAK,CAACkB,KAAK,CAAC,uCAAuC,CAAC;EACtD,CAAC,MAAM,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IACnCtB,KAAK,CAACkB,KAAK,CAAC,4CAA4C,CAAC;EAC3D,CAAC,MAAM,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,KAAI,GAAG,EAAE;IAClCtB,KAAK,CAACkB,KAAK,CAAC,gDAAgD,CAAC;EAC/D,CAAC,MAAM,IAAIA,KAAK,CAACS,IAAI,KAAK,cAAc,EAAE;IACxC3B,KAAK,CAACkB,KAAK,CAAC,sCAAsC,CAAC;EACrD,CAAC,MAAM,IAAI,CAACG,QAAQ,EAAE;IACpBrB,KAAK,CAACkB,KAAK,CAAC,8CAA8C,CAAC;EAC7D;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrB;EACAC,SAAS,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,aAAa,CAAC;EAEvC;EACAC,cAAc,EAAEA,CAAA,KAAM9B,GAAG,CAAC6B,GAAG,CAAC,YAAY,CAAC;EAE3C;EACAE,MAAM,EAAEA,CAAA,KAAM/B,GAAG,CAACgC,IAAI,CAAC,cAAc,CAAC;EAEtC;EACAC,WAAW,EAAEA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAChCnC,GAAG,CAAC6B,GAAG,CAAC,oBAAoBK,IAAI,UAAUC,KAAK,EAAE,CAAC;EAEpD;EACAC,cAAc,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAC3BtC,GAAG,CAACuC,KAAK,CAAC,eAAeF,MAAM,OAAO,EAAE;IAAEC;EAAK,CAAC,CAAC;EAEnD;EACAE,UAAU,EAAGH,MAAM,IAAKrC,GAAG,CAACyC,MAAM,CAAC,eAAeJ,MAAM,EAAE;AAC5D,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG;EACxB;EACAC,aAAa,EAAEA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAEV,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK;IACrD,MAAMU,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCZ,IAAI,EAAEA,IAAI,CAACa,QAAQ,CAAC,CAAC;MACrBZ,KAAK,EAAEA,KAAK,CAACY,QAAQ,CAAC,CAAC;MACvB,GAAGC,MAAM,CAACC,WAAW,CACnBD,MAAM,CAACE,OAAO,CAACN,OAAO,CAAC,CAACO,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAKA,CAAC,IAAI,IAAI,IAAIA,CAAC,KAAK,EAAE,CAClE;IACF,CAAC,CAAC;IACF,OAAOrD,GAAG,CAAC6B,GAAG,CAAC,YAAYgB,MAAM,EAAE,CAAC;EACtC,CAAC;EAED;EACAS,SAAS,EAAGC,EAAE,IAAKvD,GAAG,CAAC6B,GAAG,CAAC,YAAY0B,EAAE,EAAE,CAAC;EAE5C;EACAC,cAAc,EAAEA,CAACtB,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KACnCnC,GAAG,CAAC6B,GAAG,CAAC,2BAA2BK,IAAI,UAAUC,KAAK,EAAE,CAAC;EAE3D;EACAsB,YAAY,EAAEA,CAACC,UAAU,EAAEC,KAAK,GAAG,EAAE,KAAK;IACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE/B;IACAb,MAAM,CAACc,IAAI,CAACJ,UAAU,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACrC,IAAIN,UAAU,CAACM,GAAG,CAAC,IAAI,IAAI,EAAE;QAC3BJ,QAAQ,CAACK,MAAM,CAACD,GAAG,EAAEN,UAAU,CAACM,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;;IAEF;IACAL,KAAK,CAACI,OAAO,CAACG,IAAI,IAAI;MACpBN,QAAQ,CAACK,MAAM,CAAC,aAAa,EAAEC,IAAI,CAAC;IACtC,CAAC,CAAC;IAEF,OAAOlE,GAAG,CAACgC,IAAI,CAAC,UAAU,EAAE4B,QAAQ,EAAE;MACpCpD,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACA2D,YAAY,EAAEA,CAACT,UAAU,EAAEC,KAAK,GAAG,EAAE,KAAK;IACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE/Bb,MAAM,CAACc,IAAI,CAACJ,UAAU,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACrC,IAAIN,UAAU,CAACM,GAAG,CAAC,IAAI,IAAI,EAAE;QAC3BJ,QAAQ,CAACK,MAAM,CAACD,GAAG,EAAEN,UAAU,CAACM,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;IAEFL,KAAK,CAACI,OAAO,CAACG,IAAI,IAAI;MACpBN,QAAQ,CAACK,MAAM,CAAC,aAAa,EAAEC,IAAI,CAAC;IACtC,CAAC,CAAC;IAEF,OAAOlE,GAAG,CAACgC,IAAI,CAAC,iBAAiB,EAAE4B,QAAQ,EAAE;MAC3CpD,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACA4D,kBAAkB,EAAEA,CAACb,EAAE,EAAElC,MAAM,EAAEgD,KAAK,GAAG,EAAE,KACzCrE,GAAG,CAACuC,KAAK,CAAC,YAAYgB,EAAE,SAAS,EAAE;IAAElC,MAAM;IAAEgD;EAAM,CAAC,CAAC;EAEvD;EACAC,YAAY,EAAEA,CAACf,EAAE,EAAEgB,SAAS,KAC1BvE,GAAG,CAACuC,KAAK,CAAC,YAAYgB,EAAE,SAAS,EAAE;IAAEiB,UAAU,EAAED;EAAU,CAAC,CAAC;EAE/D;EACAE,aAAa,EAAEA,CAAClB,EAAE,EAAEW,IAAI,KAAK;IAC3B,MAAMN,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACK,MAAM,CAAC,YAAY,EAAEC,IAAI,CAAC;IACnC,OAAOlE,GAAG,CAACgC,IAAI,CAAC,YAAYuB,EAAE,cAAc,EAAEK,QAAQ,EAAE;MACtDpD,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAkE,kBAAkB,EAAEA,CAACC,QAAQ,EAAEC,YAAY,KACzC5E,GAAG,CAAC6B,GAAG,CAAC,YAAY8C,QAAQ,gBAAgBC,YAAY,EAAE,EAAE;IAC1DC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEJ;EACAC,YAAY,EAAEA,CAACvB,EAAE,EAAEwB,MAAM,KACvB/E,GAAG,CAACgC,IAAI,CAAC,YAAYuB,EAAE,SAAS,EAAE;IAAEwB;EAAO,CAAC,CAAC;EAE/C;EACAC,YAAY,EAAGzB,EAAE,IAAKvD,GAAG,CAACyC,MAAM,CAAC,YAAYc,EAAE,EAAE;AACnD,CAAC;;AAED;AACA,OAAO,MAAM0B,YAAY,GAAG;EAC1B;EACAC,qBAAqB,EAAEA,CAAA,KAAMlF,GAAG,CAAC6B,GAAG,CAAC,sBAAsB,CAAC;EAE5D;EACAsD,cAAc,EAAEA,CAACC,QAAQ,EAAEC,MAAM,KAAK;IACpC,MAAMxC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIsC,QAAQ,EAAEvC,MAAM,CAACoB,MAAM,CAAC,WAAW,EAAEmB,QAAQ,CAAC;IAClD,IAAIC,MAAM,EAAExC,MAAM,CAACoB,MAAM,CAAC,SAAS,EAAEoB,MAAM,CAAC;IAC5C,OAAOrF,GAAG,CAAC6B,GAAG,CAAC,sBAAsBgB,MAAM,EAAE,CAAC;EAChD,CAAC;EAED;EACAyC,mBAAmB,EAAEA,CAACF,QAAQ,EAAEC,MAAM,KAAK;IACzC,MAAMxC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIsC,QAAQ,EAAEvC,MAAM,CAACoB,MAAM,CAAC,WAAW,EAAEmB,QAAQ,CAAC;IAClD,IAAIC,MAAM,EAAExC,MAAM,CAACoB,MAAM,CAAC,SAAS,EAAEoB,MAAM,CAAC;IAC5C,OAAOrF,GAAG,CAAC6B,GAAG,CAAC,oBAAoBgB,MAAM,EAAE,CAAC;EAC9C,CAAC;EAED;EACA0C,YAAY,EAAEA,CAACH,QAAQ,EAAEC,MAAM,KAAK;IAClC,MAAMxC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIsC,QAAQ,EAAEvC,MAAM,CAACoB,MAAM,CAAC,WAAW,EAAEmB,QAAQ,CAAC;IAClD,IAAIC,MAAM,EAAExC,MAAM,CAACoB,MAAM,CAAC,SAAS,EAAEoB,MAAM,CAAC;IAC5C,OAAOrF,GAAG,CAAC6B,GAAG,CAAC,qBAAqBgB,MAAM,EAAE,CAAC;EAC/C,CAAC;EAED;EACA2C,oBAAoB,EAAEA,CAACC,MAAM,GAAG,OAAO,KACrCzF,GAAG,CAAC6B,GAAG,CAAC,4BAA4B4D,MAAM,EAAE,CAAC;EAE/C;EACAC,cAAc,EAAEA,CAAA,KAAM1F,GAAG,CAAC6B,GAAG,CAAC,mBAAmB,CAAC;EAElD;EACA8D,aAAa,EAAEA,CAACC,MAAM,GAAG,KAAK,EAAEhD,OAAO,GAAG,CAAC,CAAC,KAAK;IAC/C,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjC8C,MAAM;MACN,GAAG5C,MAAM,CAACC,WAAW,CACnBD,MAAM,CAACE,OAAO,CAACN,OAAO,CAAC,CAACO,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAKA,CAAC,IAAI,IAAI,IAAIA,CAAC,KAAK,EAAE,CAClE;IACF,CAAC,CAAC;IACF,OAAOrD,GAAG,CAAC6B,GAAG,CAAC,6BAA6BgB,MAAM,EAAE,EAAE;MACpDgC,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EAED;EACAgB,uBAAuB,EAAGJ,MAAM,IAC9BzF,GAAG,CAAC6B,GAAG,CAAC,+BAA+B4D,MAAM,EAAE;AACnD,CAAC;;AAED;AACA,OAAO,MAAMK,QAAQ,GAAG;EACtB;EACAC,YAAY,EAAEA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAChC,MAAMC,GAAG,GAAG3E,MAAM,CAAC4E,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IAC5C,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAAC5E,IAAI,GAAGyE,GAAG;IACfG,IAAI,CAACG,QAAQ,GAAGP,QAAQ;IACxBK,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;IAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;IACZL,QAAQ,CAACG,IAAI,CAACG,WAAW,CAACP,IAAI,CAAC;IAC/B9E,MAAM,CAAC4E,GAAG,CAACU,eAAe,CAACX,GAAG,CAAC;EACjC,CAAC;EAED;EACAY,eAAe,EAAG7F,KAAK,IAAK;IAAA,IAAA8F,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IAC1B,KAAAH,eAAA,GAAI9F,KAAK,CAACG,QAAQ,cAAA2F,eAAA,gBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,eAApBA,oBAAA,CAAsBI,OAAO,EAAE;MACjC,OAAOnG,KAAK,CAACG,QAAQ,CAAC+F,IAAI,CAACC,OAAO;IACpC;IACA,KAAAH,gBAAA,GAAIhG,KAAK,CAACG,QAAQ,cAAA6F,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBE,IAAI,cAAAD,qBAAA,eAApBA,qBAAA,CAAsBjG,KAAK,EAAE;MAC/B,OAAOA,KAAK,CAACG,QAAQ,CAAC+F,IAAI,CAAClG,KAAK;IAClC;IACA,IAAIA,KAAK,CAACmG,OAAO,EAAE;MACjB,OAAOnG,KAAK,CAACmG,OAAO;IACtB;IACA,OAAO,8BAA8B;EACvC,CAAC;EAED;EACAC,aAAa,EAAEA,CAACC,QAAQ,EAAEC,YAAY,KAAK;IACzC,MAAMC,aAAa,GAAG;MACpB,SAAS,EAAE,CAAC;MACZ,WAAW,EAAE,CAAC;MACd,OAAO,EAAE,CAAC;MACV,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,aAAa,CAACF,QAAQ,CAAC,IAAIE,aAAa,CAACD,YAAY,CAAC;EAC/D,CAAC;EAED;EACAE,cAAc,EAAGC,KAAK,IAAK;IACzB,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IACjC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;IACnD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;EACzE,CAAC;EAED;EACAO,UAAU,EAAGC,IAAI,IAAK;IACpB,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC,CAAChD,MAAM,CAAC,IAAIiD,IAAI,CAACR,IAAI,CAAC,CAAC;EAC3B,CAAC;EAED;EACAS,eAAe,EAAGT,IAAI,IAAK;IACzB,MAAMU,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;IACtB,MAAMG,IAAI,GAAGD,GAAG,GAAG,IAAIF,IAAI,CAACR,IAAI,CAAC;IACjC,MAAMY,OAAO,GAAGnB,IAAI,CAACC,KAAK,CAACiB,IAAI,GAAG,KAAK,CAAC;IACxC,MAAME,KAAK,GAAGpB,IAAI,CAACC,KAAK,CAACiB,IAAI,GAAG,OAAO,CAAC;IACxC,MAAMG,IAAI,GAAGrB,IAAI,CAACC,KAAK,CAACiB,IAAI,GAAG,QAAQ,CAAC;IAExC,IAAIC,OAAO,GAAG,EAAE,EAAE;MAChB,OAAO,GAAGA,OAAO,UAAUA,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IAC3D,CAAC,MAAM,IAAIC,KAAK,GAAG,EAAE,EAAE;MACrB,OAAO,GAAGA,KAAK,QAAQA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IACrD,CAAC,MAAM;MACL,OAAO,GAAGC,IAAI,OAAOA,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM;IAClD;EACF;AACF,CAAC;AAED,eAAenJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
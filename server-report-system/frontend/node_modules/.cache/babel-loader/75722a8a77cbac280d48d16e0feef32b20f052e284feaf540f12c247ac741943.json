{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nclass ApiService {\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Request interceptor to add auth token\n    this.client.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor to handle auth errors\n    this.client.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        // Handle unauthorized - redirect to login\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  // Generic HTTP methods\n  async get(url, config = {}) {\n    return this.client.get(url, config);\n  }\n  async post(url, data, config = {}) {\n    return this.client.post(url, data, config);\n  }\n  async put(url, data, config = {}) {\n    return this.client.put(url, data, config);\n  }\n  async patch(url, data, config = {}) {\n    return this.client.patch(url, data, config);\n  }\n  async delete(url, config = {}) {\n    return this.client.delete(url, config);\n  }\n\n  // Auth methods\n  async login(discordCode) {\n    return this.post('/auth/discord/callback', {\n      code: discordCode\n    });\n  }\n  async logout() {\n    const response = await this.post('/auth/logout');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return response;\n  }\n  async getCurrentUser() {\n    return this.get('/auth/me');\n  }\n\n  // Report methods\n  async getReports(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    return this.get(`/reports${queryString ? '?' + queryString : ''}`);\n  }\n  async getReport(id) {\n    return this.get(`/reports/${id}`);\n  }\n  async createReport(reportData) {\n    return this.post('/reports', reportData);\n  }\n  async updateReport(id, reportData) {\n    return this.put(`/reports/${id}`, reportData);\n  }\n  async deleteReport(id) {\n    return this.delete(`/reports/${id}`);\n  }\n  async uploadReportAttachment(reportId, file) {\n    const formData = new FormData();\n    formData.append('attachment', file);\n    return this.post(`/reports/${reportId}/attachments`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n  async assignReport(reportId, assigneeId) {\n    return this.patch(`/reports/${reportId}/assign`, {\n      assigneeId\n    });\n  }\n  async updateReportStatus(reportId, status, notes = '') {\n    return this.patch(`/reports/${reportId}/status`, {\n      status,\n      notes\n    });\n  }\n\n  // User methods\n  async getUsers(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    return this.get(`/users${queryString ? '?' + queryString : ''}`);\n  }\n  async getUser(id) {\n    return this.get(`/users/${id}`);\n  }\n  async updateUser(id, userData) {\n    return this.put(`/users/${id}`, userData);\n  }\n  async updateUserRole(id, role) {\n    return this.patch(`/users/${id}/role`, {\n      role\n    });\n  }\n\n  // Analytics methods\n  async getDashboardAnalytics() {\n    return this.get('/analytics/dashboard');\n  }\n  async getReportStats(period = '30d') {\n    return this.get(`/analytics/reports?period=${period}`);\n  }\n  async getUserStats(period = '30d') {\n    return this.get(`/analytics/users?period=${period}`);\n  }\n  async exportReports(format = 'csv', filters = {}) {\n    const params = new URLSearchParams({\n      format,\n      ...filters\n    });\n    return this.get(`/analytics/export?${params.toString()}`, {\n      responseType: format === 'pdf' ? 'blob' : 'json'\n    });\n  }\n\n  // Public methods (no auth required)\n  async getPublicStats() {\n    return this.get('/public/stats');\n  }\n\n  // Health check\n  async checkHealth() {\n    return this.get('/health');\n  }\n}\n\n// Create and export a singleton instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","client","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","get","url","post","data","put","patch","delete","login","discordCode","code","logout","getCurrentUser","getReports","params","queryString","URLSearchParams","toString","getReport","id","createReport","reportData","updateReport","deleteReport","uploadReportAttachment","reportId","file","formData","FormData","append","assignReport","assigneeId","updateReportStatus","notes","getUsers","getUser","updateUser","userData","updateUserRole","role","getDashboardAnalytics","getReportStats","period","getUserStats","exportReports","format","filters","responseType","getPublicStats","checkHealth","apiService"],"sources":["C:/Users/anton/OneDrive/Desktop/ahrpo scripts/logging_website/server-report-system/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.client = axios.create({\r\n      baseURL: API_BASE_URL,\r\n      timeout: 10000,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // Request interceptor to add auth token\r\n    this.client.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Response interceptor to handle auth errors\r\n    this.client.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          // Handle unauthorized - redirect to login\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Generic HTTP methods\r\n  async get(url, config = {}) {\r\n    return this.client.get(url, config);\r\n  }\r\n\r\n  async post(url, data, config = {}) {\r\n    return this.client.post(url, data, config);\r\n  }\r\n\r\n  async put(url, data, config = {}) {\r\n    return this.client.put(url, data, config);\r\n  }\r\n\r\n  async patch(url, data, config = {}) {\r\n    return this.client.patch(url, data, config);\r\n  }\r\n\r\n  async delete(url, config = {}) {\r\n    return this.client.delete(url, config);\r\n  }\r\n\r\n  // Auth methods\r\n  async login(discordCode) {\r\n    return this.post('/auth/discord/callback', { code: discordCode });\r\n  }\r\n\r\n  async logout() {\r\n    const response = await this.post('/auth/logout');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    return response;\r\n  }\r\n\r\n  async getCurrentUser() {\r\n    return this.get('/auth/me');\r\n  }\r\n\r\n  // Report methods\r\n  async getReports(params = {}) {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return this.get(`/reports${queryString ? '?' + queryString : ''}`);\r\n  }\r\n\r\n  async getReport(id) {\r\n    return this.get(`/reports/${id}`);\r\n  }\r\n\r\n  async createReport(reportData) {\r\n    return this.post('/reports', reportData);\r\n  }\r\n\r\n  async updateReport(id, reportData) {\r\n    return this.put(`/reports/${id}`, reportData);\r\n  }\r\n\r\n  async deleteReport(id) {\r\n    return this.delete(`/reports/${id}`);\r\n  }\r\n\r\n  async uploadReportAttachment(reportId, file) {\r\n    const formData = new FormData();\r\n    formData.append('attachment', file);\r\n    \r\n    return this.post(`/reports/${reportId}/attachments`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  }\r\n\r\n  async assignReport(reportId, assigneeId) {\r\n    return this.patch(`/reports/${reportId}/assign`, { assigneeId });\r\n  }\r\n\r\n  async updateReportStatus(reportId, status, notes = '') {\r\n    return this.patch(`/reports/${reportId}/status`, { status, notes });\r\n  }\r\n\r\n  // User methods\r\n  async getUsers(params = {}) {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return this.get(`/users${queryString ? '?' + queryString : ''}`);\r\n  }\r\n\r\n  async getUser(id) {\r\n    return this.get(`/users/${id}`);\r\n  }\r\n\r\n  async updateUser(id, userData) {\r\n    return this.put(`/users/${id}`, userData);\r\n  }\r\n\r\n  async updateUserRole(id, role) {\r\n    return this.patch(`/users/${id}/role`, { role });\r\n  }\r\n\r\n  // Analytics methods\r\n  async getDashboardAnalytics() {\r\n    return this.get('/analytics/dashboard');\r\n  }\r\n\r\n  async getReportStats(period = '30d') {\r\n    return this.get(`/analytics/reports?period=${period}`);\r\n  }\r\n\r\n  async getUserStats(period = '30d') {\r\n    return this.get(`/analytics/users?period=${period}`);\r\n  }\r\n\r\n  async exportReports(format = 'csv', filters = {}) {\r\n    const params = new URLSearchParams({ format, ...filters });\r\n    return this.get(`/analytics/export?${params.toString()}`, {\r\n      responseType: format === 'pdf' ? 'blob' : 'json',\r\n    });\r\n  }\r\n\r\n  // Public methods (no auth required)\r\n  async getPublicStats() {\r\n    return this.get('/public/stats');\r\n  }\r\n\r\n  // Health check\r\n  async checkHealth() {\r\n    return this.get('/health');\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst apiService = new ApiService();\r\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}